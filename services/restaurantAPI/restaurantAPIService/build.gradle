plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.8.18'
}

group = 'be.kuleuven'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    grpcVersion = '1.53.0'
    protobufVersion = '3.21.12'
    googleProtobufVersion = '3.21.12'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    implementation "io.grpc:grpc-netty-shaded:$grpcVersion"
    implementation "io.grpc:grpc-protobuf:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation "com.google.protobuf:protobuf-java:$googleProtobufVersion"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Protobuf Java library for JSON parsing
    implementation "com.google.protobuf:protobuf-java-util:$protobufVersion"

    // Jackson voor JSON-bewerking
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'

    // Dit verwijst naar je andere project
    implementation project(':menuProto')
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcVersion"
        }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += 'build/generated/source/proto/main/java'
            srcDirs += 'build/generated/source/proto/main/grpc'
        }
    }
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}